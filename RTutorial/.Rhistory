)
fit = model %>%
fit (
x = number_x_train,
y = number_y_train,
epochs = 1000
)
model = keras_model_sequential()
model %>%
layer_dense(input_shape= ncol(number_x_train), units = 2, activation= "relu")   %>%
layer_dense(units = 2, activation = 'relu') %>%
layer_dense(units = 2, activation = 'relu') %>%
layer_dense(units = 1)
summary(model)
model %>%
compile(
loss = "mse",
optimizer = "adam",
metrics = list("mean_absolute_error")
)
fit = model %>%
fit (
x = number_x_train,
y = number_y_train,
epochs = 1000
)
# add testing
library(keras)
use_session_with_seed(1, disable_parallel_cpu = F)
numbers = 1000
val1_array = round(runif(numbers)*100)
val2_array = round(runif(numbers)*100)
answer_array = val1_array + val2_array
set.seed(100)
val_idx <- c(sample(1:numbers, numbers*.7))
number_x_train = cbind(val1_array[val_idx], val2_array[val_idx])
colnames(number_x_train) = c("val1", "val2")
number_y_train = answer_array[val_idx]
number_x_test = cbind(val1_array[-val_idx], val2_array[-val_idx])
colnames(number_x_test) = c("val1", "val2")
number_y_test = answer_array[-val_idx]
model = keras_model_sequential()
model %>%
layer_dense(input_shape= ncol(number_x_train), units = 2, activation= "relu")   %>%
layer_dense(units = 2, activation = 'relu') %>%
layer_dense(units = 2, activation = 'relu') %>%
layer_dense(units = 1)
summary(model)
model %>%
compile(
loss = "mse",
optimizer = "adam",
metrics = list("mean_absolute_error")
)
fit = model %>%
fit (
x = number_x_train,
y = number_y_train,
epochs = 1000
)
# add testing
library(keras)
use_session_with_seed(1, disable_parallel_cpu = F)
numbers = 1000
val1_array = round(runif(numbers)*100)
val2_array = round(runif(numbers)*100)
answer_array = val1_array + val2_array
set.seed(100)
val_idx <- c(sample(1:numbers, numbers*.7))
number_x_train = cbind(val1_array[val_idx], val2_array[val_idx])
colnames(number_x_train) = c("val1", "val2")
number_y_train = answer_array[val_idx]
number_x_test = cbind(val1_array[-val_idx], val2_array[-val_idx])
colnames(number_x_test) = c("val1", "val2")
number_y_test = answer_array[-val_idx]
model = keras_model_sequential()
model %>%
layer_dense(input_shape= ncol(number_x_train), units = 2, activation= "relu")   %>%
layer_dense(units = 2, activation = 'relu') %>%
layer_dense(units = 2, activation = 'relu') %>%
layer_dense(units = 2, activation = 'relu') %>%
layer_dense(units = 2, activation = 'relu') %>%
layer_dense(units = 2, activation = 'relu') %>%
layer_dense(units = 2, activation = 'relu') %>%
layer_dense(units = 1)
summary(model)
model %>%
compile(
loss = "mse",
optimizer = "adam",
metrics = list("mean_absolute_error")
)
fit = model %>%
fit (
x = number_x_train,
y = number_y_train,
epochs = 1000
)
model = keras_model_sequential()
model %>%
layer_dense(input_shape= ncol(number_x_train), units = 2, activation= "relu")   %>%
layer_dense(units = 1)
summary(model)
model %>%
compile(
loss = "mse",
optimizer = "adam",
metrics = list("mean_absolute_error")
)
fit = model %>%
fit (
x = number_x_train,
y = number_y_train,
epochs = 1000
)
model %>% evaluate(number_x_test, number_y_test, verbose = 0)
model %>% evaluate(number_x_test, number_y_test, verbose = 0)
number_pred = model %>% predict(number_x_test)
head(number_x_test, number_pred)
head(cbind(number_x_test, number_pred))
number_pred = model %>% predict(number_x_test)
result_sum = cbind(number_x_test, number_pred)
colnames(result_sum) = c("val1", "val2", "Predict")
head(result_sum,30)
rm(list=ls())
library(keras)
library("magick")
piano_accordion_list <- list.files('D:\images\accordion_piano')
length(piano_accordion_list)
piano_accordion_list <- list.files('D:\images\accordion_piano')
piano_accordion_list <- list.files('D:/images/accordion_piano')
length(piano_accordion_list)
use_session_with_seed(1, disable_parallel_cpu = F)
set.seed(100)
piano_accordion_list <- list.files('D:/images/accordion_piano')
piano_accordion_idx <- c(sample(1:nrow(Boston), nrow(Boston)*.7))
piano_accordion_file_list <- list.files('D:/images/accordion_piano')
piano_accordion_idx <- c(sample(1:length(piano_accordion_file_list), length(piano_accordion_file_list)*.7))
piano_accordion_train_file <- piano_accordion_file_list[piano_accordion_idx,]
piano_accordion_test_file <- piano_accordion_file_list[-piano_accordion_idx,]
piano_accordion_file_list <- list.files('D:/images/accordion_piano')
piano_accordion_idx <- c(sample(1:length(piano_accordion_file_list), length(piano_accordion_file_list)*.7))
piano_accordion_train_file <- piano_accordion_file_list[piano_accordion_idx]
piano_accordion_test_file <- piano_accordion_file_list[-piano_accordion_idx]
piano_accordion_train_file
piano_accordion_train_file_list <- piano_accordion_file_list[piano_accordion_idx]
piano_accordion_test_file_list <- piano_accordion_file_list[-piano_accordion_idx]
# y_test
y_test <- c()
for(i in 1:length(piano_accordion_test_file_list)){
y_test <- c(y_test, as.integer(strsplit(piano_accordion_file_list[i], '_')[[1]][1]))
}
piano_accordion_test_file_list
piano_accordion_y <- to_categorical(piano_accordion_idx, 2)
for(i in 1:length(piano_accordion_test_file_list)){
piano_accordion_y <- to_categorical(strsplit(piano_accordion_file_list[i], '_')[[1]][1]))
}
for(i in 1:length(piano_accordion_test_file_list)){
piano_accordion_y <- to_categorical(strsplit(piano_accordion_file_list[i], '_')[[1]][1])
}
to_categorical(strsplit(piano_accordion_file_list[1], '_')[[1]][1]
to_categorical(strsplit(piano_accordion_file_list[1], '_')[[1]][1])
rm(list=ls())
library(keras)
library("magick")
to_categorical(strsplit(piano_accordion_file_list[1], '_')[[1]][1])
rm(list=ls())
library(keras)
library("magick")
use_session_with_seed(1, disable_parallel_cpu = F)
set.seed(100)
piano_accordion_file_list <- list.files('D:/images/accordion_piano')
piano_accordion_idx <- c(sample(1:length(piano_accordion_file_list), length(piano_accordion_file_list)*.7))
to_categorical(strsplit(piano_accordion_file_list[1], '_')[[1]][1])
for(i in 1:length(piano_accordion_test_file_list)){
piano_accordion_y <- to_categorical(strsplit(piano_accordion_file_list[i], '_')[[1]][1])
}
piano_accordion_train_file_list <- piano_accordion_file_list[piano_accordion_idx]
piano_accordion_test_file_list <- piano_accordion_file_list[-piano_accordion_idx]
to_categorical(strsplit(piano_accordion_file_list[1], '_')[[1]][1])
piano_accordion_file_y <- array(0, dim = c(length(piano_accordion_file_list)))
piano_accordion_file_y <- array(0, dim = c(length(piano_accordion_file_list)))
for(i in 1:length(piano_accordion_file_list)){
if(as.integer(strsplit(piano_accordion_file_list[i], '_')[[1]][1]) == 'accordian'){
y_train[i] <- 0
}
else if(as.integer(strsplit(piano_accordion_file_list[i], '_')[[1]][1]) == 'piano'){
y_train[i] <- 1
}
}
for(i in 1:length(piano_accordion_file_list)){
if(strsplit(piano_accordion_file_list[i], '_')[[1]][1] == 'accordian'){
y_train[i] <- 0
}
else if(strsplit(piano_accordion_file_list[i], '_')[[1]][1] == 'piano'){
y_train[i] <- 1
}
}
for(i in 1:length(piano_accordion_file_list)){
if(strsplit(piano_accordion_file_list[i], '_')[[1]][1] == 'accordian'){
piano_accordion_file_y[i] <- 0
}
else if(strsplit(piano_accordion_file_list[i], '_')[[1]][1] == 'piano'){
piano_accordion_file_y[i] <- 1
}
}
piano_accordion_file_y<- c()
piano_accordion_file_y <- to_categorical(piano_accordion_file_y, 2)
for(i in 1:length(piano_accordion_file_list)){
if(strsplit(piano_accordion_file_list[i], '_')[[1]][1] == 'accordian'){
piano_accordion_file_y[i] <- 0
}
else if(strsplit(piano_accordion_file_list[i], '_')[[1]][1] == 'piano'){
piano_accordion_file_y[i] <- 1
}
}
piano_accordion_file_y
piano_accordion_file_y_train <- piano_accordion_file_y[ind]
piano_accordion_file_y_train <- piano_accordion_file_y[piano_accordion_idx]
piano_accordion_file_y_test <- piano_accordion_file_y[-piano_accordion_idx]
piano_accordion_file_y_test
piano_accordion_idx
piano_accordion_file_y_test
piano_accordion_file_y_train
rm(list=ls())
library(keras)
library("magick")
use_session_with_seed(1, disable_parallel_cpu = F)
piano_accordion_idx <- c(sample(1:length(piano_accordion_file_list), length(piano_accordion_file_list)*.7))
set.seed(100)
piano_accordion_file_list <- list.files('D:/images/accordion_piano')
piano_accordion_train_file_list <- piano_accordion_file_list[piano_accordion_idx]
piano_accordion_test_file_list <- piano_accordion_file_list[-piano_accordion_idx]
piano_accordion_file_y <- array(0, dim = c(length(piano_accordion_file_list)))
piano_accordion_idx <- c(sample(1:length(piano_accordion_file_list), length(piano_accordion_file_list)*.7))
piano_accordion_train_file_list <- piano_accordion_file_list[piano_accordion_idx]
piano_accordion_test_file_list <- piano_accordion_file_list[-piano_accordion_idx]
piano_accordion_file_y <- array(0, dim = c(length(piano_accordion_file_list)))
for(i in 1:length(piano_accordion_file_list)){
if(strsplit(piano_accordion_file_list[i], '_')[[1]][1] == 'accordian'){
piano_accordion_file_y[i] <- 0
}
else if(strsplit(piano_accordion_file_list[i], '_')[[1]][1] == 'piano'){
piano_accordion_file_y[i] <- 1
}
}
piano_accordion_file_y_train <- piano_accordion_file_y[piano_accordion_idx]
piano_accordion_file_y_test <- piano_accordion_file_y[-piano_accordion_idx]
piano_accordion_file_y_test
piano_accordion_file_y_train
# x_train / x_test
image <- image_read(file.choose())
img.resized <- image_resize(img, "300x300!")
img.resized <- image_resize(image, "300x300!")
print(img.resized)
# x_train / x_test
image <- image_read(file.choose())
resizeImage(image, 300, 300, method = "nearest")
print(image)
# x_train / x_test
image img <- image_read(file.choose()
print(img.resized)
img.resized <- image_resize(img, "300x300!")
print(img.resized)
# x_train / x_test
image <- image_read(file.choose())
img.resized <- image_resize(img, "300x300!")
print(img.resized)
# x_train
piano_accordion_file_x_train <- array(0, dim = c(length(mnist_train_file_list),300,300,3))
# x_train
piano_accordion_file_x_train <- array(0, dim = c(length(piano_accordion_file_list),300,300,3))
for(i in 1:length(piano_accordion_train_file_list)){
piano_accordion_file_x_train[i,,] = matrix(as.integer(image_data(image_read(paste(piano_accordion_train_file_list[i],sep='')))),nrow=28,ncol=28)
print(paste("file_num",i))
}
# x_train
piano_accordion_file_x_train <- array(0, dim = c(length(piano_accordion_file_list),300,300,3))
for(i in 1:length(piano_accordion_train_file_list)){
piano_accordion_file_x_train[i,,] = matrix(as.integer(image_data(image_read(paste(piano_accordion_train_file_list[i])))),nrow=28,ncol=28)
print(paste("file_num",i))
}
# x_train
piano_accordion_file_x_train <- array(0, dim = c(length(piano_accordion_file_list),300,300,3))
for(i in 1:length(piano_accordion_train_file_list)){
piano_accordion_file_x_train[i,,] = matrix(as.integer(image_data(image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[i],sep='')))),nrow=28,ncol=28)
print(paste("file_num",i))
}
# x_train
piano_accordion_file_x_train <- array(0, dim = c(length(piano_accordion_file_list),300,300,3))
for(i in 1:length(piano_accordion_train_file_list)){
piano_accordion_file_x_train[i,,] = matrix(as.integer(image_data(image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[i],sep='')))),nrow=300,ncol=300)
print(paste("file_num",i))
}
# x_train
piano_accordion_file_x_train <- array(0, dim = c(length(piano_accordion_file_list),300,300))
for(i in 1:length(piano_accordion_train_file_list)){
piano_accordion_file_x_train[i,,] = matrix(as.integer(image_data(image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[i],sep='')))),nrow=300,ncol=300)
print(paste("file_num",i))
}
as.integer(image_data(image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[1],sep='')))),nrow=300,ncol=300)
as.integer(image_data(image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[1],sep='')))),nrow=300,ncol=300
matrix(as.integer(image_data(image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[1],sep='')))),nrow=300,ncol=300)
as.integer(image_data(image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[1],sep='')))),nrow=300,ncol=300
as.integer(image_data(image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[1],sep=''))))
as.integer(image_data(image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[1],sep=''))))
dim(as.integer(image_data(image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[1],sep='')))))
# x_train
piano_accordion_file_x_train <- array(0, dim = c(length(piano_accordion_file_list),300,300))
for(i in 1:length(piano_accordion_train_file_list)){
piano_accordion_file_x_train[i,,] = matrix(as.integer(image_data(image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[i],sep='')), "300x300!")),nrow=300,ncol=300)
print(paste("file_num",i))
}
# x_train
piano_accordion_file_x_train <- array(0, dim = c(length(piano_accordion_file_list),300,300))
for(i in 1:length(piano_accordion_train_file_list)){
piano_accordion_file_x_train[i,,] = matrix(as.integer(image_data(image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[i],sep='')))),nrow=300,ncol=300)
print(paste("file_num",i))
}
# x_train
piano_accordion_file_x_train <- array(0, dim = c(length(piano_accordion_file_list),300,300))
for(i in 1:length(piano_accordion_train_file_list)){
image <- image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[i],sep=''))
img.resized <- image_resize(img, "300x300!")
piano_accordion_file_x_train[i,,] = matrix(as.integer(image_data(img.resized)),nrow=300,ncol=300)
print(paste("file_num",i))
}
for(i in 1:length(piano_accordion_train_file_list)){
image <- image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[i],sep=''))
image.resized <- image_resize(image, "300x300!")
piano_accordion_file_x_train[i,,] = matrix(as.integer(image_data(image.resized)),nrow=300,ncol=300)
print(paste("file_num",i))
}
dim(as.integer(image_data(image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[1],sep='')))))
dim(piano_accordion_file_x_train)
# x_train
piano_accordion_file_x_train <- array(0, dim = c(length(piano_accordion_file_list),300,300,3))
for(i in 1:length(piano_accordion_train_file_list)){
image <- image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[i],sep=''))
image.resized <- image_resize(image, "300x300!")
piano_accordion_file_x_train[i,,] = as.integer(image_data(image.resized))
print(paste("file_num",i))
}
# x_train
piano_accordion_file_x_train <- array(0, dim = c(length(piano_accordion_file_list),300,300))
for(i in 1:length(piano_accordion_train_file_list)){
image <- image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[i],sep=''))
image.resized <- image_resize(image, "300x300!")
piano_accordion_file_x_train[i,,] = matrix(as.integer(image_data(image.resized)))
print(paste("file_num",i))
}
dim(as.integer(image_data(image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[1],sep='')))))
# x_train
piano_accordion_file_x_train <- array(0, dim = c(length(piano_accordion_file_list),300,300,3))
for(i in 1:length(piano_accordion_train_file_list)){
image <- image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[i],sep=''))
image.resized <- image_resize(image, "300x300!")
piano_accordion_file_x_train[i,,] = matrix(as.integer(image_data(image.resized)), dim=c(300,300,3))
print(paste("file_num",i))
}
piano_accordion_file_x_train[1,,] <- dim(as.integer(image_data(image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[1],sep='')))))
piano_accordion_file_x_train[1,,,] <- dim(as.integer(image_data(image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[1],sep='')))))
# x_train
piano_accordion_file_x_train <- array(0, dim = c(length(piano_accordion_file_list),300,300,3))
for(i in 1:length(piano_accordion_train_file_list)){
image <- image_read(paste('D:/images/accordion_piano/',piano_accordion_train_file_list[i],sep=''))
image.resized <- image_resize(image, "300x300!")
piano_accordion_file_x_train[i,,,] = as.integer(image_data(image.resized))
print(paste("file_num",i))
}
dim(piano_accordion_file_x_train)
piano_accordion_file_x <- array(0, dim = c(length(piano_accordion_file_list),300,300,3))
for(i in 1:length(piano_accordion_file_list)){
image <- image_read(paste('D:/images/accordion_piano/',piano_accordion_file_list[i],sep=''))
image.resized <- image_resize(image, "300x300!")
piano_accordion_file_x[i,,,] = as.integer(image_data(image.resized))
print(paste("file_num",i))
}
piano_accordion_file_x
piano_accordion_file_x <- piano_accordion_file_x/255
piano_accordion_file_x_train = piano_accordion_file_x[piano_accordion_idx,,,]
piano_accordion_file_x_test = piano_accordion_file_x[-piano_accordion_idx,,,]
dim(piano_accordion_file_x)
piano_accordion_file_y_train <- piano_accordion_file_y[piano_accordion_idx]
piano_accordion_file_y_test <- piano_accordion_file_y[-piano_accordion_idx]
piano_accordion_file_y_test
piano_accordion_file_y_train
piano_accordion_file_y_train_one_hot <- to_categorical(piano_accordion_file_y_train, 2)
piano_accordion_file_y_test_one_hot <- to_categorical(piano_accordion_file_y_test, 2)
piano_accordion_file_y_train_one_hot
model <- keras_model_sequential() %>%
layer_conv_2d(32, kernel_size = c(3,3),activation='relu', input_shape = c(300,300,3)) %>%
layer_conv_2d(64, kernel_size = c(3,3),activation='relu') %>%
layer_max_pooling_2d(pool_size = c(2,2)) %>%
layer_dropout((rate=0.25)) %>%
layer_flatten() %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout((rate=0.5)) %>%
layer_dense(units = 10, activation = 'softmax')
model %>% compile(
loss = "categorical_crossentropy",
optimizer = "adam",
metrics = c("accuracy")
)
history <- model %>% fit(
piano_accordion_file_x_train, piano_accordion_file_y_train_one_hot,
epochs = 30, batch_size = 128,
validation_split = 0.2
)
model <- keras_model_sequential() %>%
layer_conv_2d(32, kernel_size = c(3,3),activation='relu', input_shape = c(300,300,3)) %>%
layer_conv_2d(64, kernel_size = c(3,3),activation='relu') %>%
layer_max_pooling_2d(pool_size = c(2,2)) %>%
layer_dropout((rate=0.25)) %>%
layer_flatten() %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout((rate=0.5)) %>%
layer_dense(units = 2, activation = 'softmax')
model %>% compile(
loss = "categorical_crossentropy",
optimizer = "adam",
metrics = c("accuracy")
)
history <- model %>% fit(
piano_accordion_file_x_train, piano_accordion_file_y_train_one_hot,
epochs = 30, batch_size = 128,
validation_split = 0.2
)
model <- keras_model_sequential() %>%
layer_conv_2d(16, kernel_size = c(10,10),activation='relu', input_shape = c(300,300,3)) %>%
layer_conv_2d(16, kernel_size = c(10,10),activation='relu') %>%
layer_max_pooling_2d(pool_size = c(5,5)) %>%
layer_dropout((rate=0.25)) %>%
layer_flatten() %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout((rate=0.5)) %>%
layer_dense(units = 2, activation = 'softmax')
model %>% compile(
loss = "categorical_crossentropy",
optimizer = "adam",
metrics = c("accuracy")
)
history <- model %>% fit(
piano_accordion_file_x_train, piano_accordion_file_y_train_one_hot,
epochs = 30, batch_size = 128,
validation_split = 0.2
)
rm(list=ls())
library(keras)
library("magick")
use_session_with_seed(1, disable_parallel_cpu = F)
set.seed(100)
piano_accordion_file_list <- list.files('D:/images/accordion_piano')
piano_accordion_idx <- c(sample(1:length(piano_accordion_file_list), length(piano_accordion_file_list)*.7))
piano_accordion_train_file_list <- piano_accordion_file_list[piano_accordion_idx]
piano_accordion_test_file_list <- piano_accordion_file_list[-piano_accordion_idx]
piano_accordion_file_y <- array(0, dim = c(length(piano_accordion_file_list)))
piano_accordion_file_x <- array(0, dim = c(length(piano_accordion_file_list),60,60,3))
# x_train / x_test
image <- image_read(file.choose())
img.resized <- image_resize(img, "60x60!")
# x_train / x_test
piano_accordion_file_x <- array(0, dim = c(length(piano_accordion_file_list),60,60,3))
for(i in 1:length(piano_accordion_file_list)){
image <- image_read(paste('D:/images/accordion_piano/',piano_accordion_file_list[i],sep=''))
image.resized <- image_resize(image, "60x60!")
piano_accordion_file_x[i,,,] = as.integer(image_data(image.resized))
print(paste("file_num",i))
}
piano_accordion_file_x <- piano_accordion_file_x/255
piano_accordion_file_x_train = piano_accordion_file_x[piano_accordion_idx,,,]
piano_accordion_file_x_test = piano_accordion_file_x[-piano_accordion_idx,,,]
# y_train / y_test
for(i in 1:length(piano_accordion_file_list)){
if(strsplit(piano_accordion_file_list[i], '_')[[1]][1] == 'accordian'){
piano_accordion_file_y[i] <- 0
}
else if(strsplit(piano_accordion_file_list[i], '_')[[1]][1] == 'piano'){
piano_accordion_file_y[i] <- 1
}
}
piano_accordion_file_y_train <- piano_accordion_file_y[piano_accordion_idx]
piano_accordion_file_y_test <- piano_accordion_file_y[-piano_accordion_idx]
piano_accordion_file_y_test
piano_accordion_file_y_train
piano_accordion_file_y_train_one_hot <- to_categorical(piano_accordion_file_y_train, 2)
piano_accordion_file_y_test_one_hot <- to_categorical(piano_accordion_file_y_test, 2)
model <- keras_model_sequential() %>%
layer_conv_2d(16, kernel_size = c(10,10),activation='relu', input_shape = c(60,60,3)) %>%
layer_conv_2d(16, kernel_size = c(10,10),activation='relu') %>%
layer_max_pooling_2d(pool_size = c(5,5)) %>%
layer_dropout((rate=0.25)) %>%
layer_flatten() %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout((rate=0.5)) %>%
layer_dense(units = 2, activation = 'softmax')
summary(model)
model %>% compile(
loss = "categorical_crossentropy",
optimizer = "adam",
metrics = c("accuracy")
)
history <- model %>% fit(
piano_accordion_file_x_train, piano_accordion_file_y_train_one_hot,
epochs = 30, batch_size = 128,
validation_split = 0.2
)
plot(history)
model %>% evaluate(piano_accordion_file_x_test, piano_accordion_file_y_test_one_hot, verbose=0)
model %>% predict_classes(piano_accordion_file_x_test)
model %>% predict_classes(piano_accordion_file_x_test)
model %>% evaluate(piano_accordion_file_x_test, piano_accordion_file_y_test_one_hot, verbose=0)
